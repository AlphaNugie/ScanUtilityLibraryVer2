<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SocketHelper</name>
    </assembly>
    <members>
        <member name="T:SocketHelper.Event.ClientOfflineEventArgs">
            <summary>
            客户端下线事件参数对象
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ClientOfflineEventArgs.Client">
            <summary>
            客户端对象
            </summary>
        </member>
        <member name="M:SocketHelper.Event.ClientOfflineEventArgs.#ctor">
            <summary>
            默认构造器
            </summary>
        </member>
        <member name="M:SocketHelper.Event.ClientOfflineEventArgs.#ctor(SocketHelper.ClientModel)">
            <summary>
            用客户端对象初始化
            </summary>
            <param name="model">新连入的客户端对象</param>
        </member>
        <member name="T:SocketHelper.Event.ClientOnlineEventArgs">
            <summary>
            新客户端上线事件参数对象
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ClientOnlineEventArgs.Client">
            <summary>
            客户端对象
            </summary>
        </member>
        <member name="M:SocketHelper.Event.ClientOnlineEventArgs.#ctor">
            <summary>
            默认构造器
            </summary>
        </member>
        <member name="M:SocketHelper.Event.ClientOnlineEventArgs.#ctor(SocketHelper.ClientModel)">
            <summary>
            用客户端对象初始化
            </summary>
            <param name="model">新连入的客户端对象</param>
        </member>
        <member name="T:SocketHelper.Event.EventHandlers">
            <summary>
            各种事件的委托
            </summary>
        </member>
        <member name="T:SocketHelper.Event.EventHandlers.StateInfoEventHandler">
            <summary>
            连接状态改变时返回连接状态事件委托
            </summary>
            <param name="eventArgs"></param>
            <param name="sender"></param>
        </member>
        <member name="T:SocketHelper.Event.EventHandlers.ErrorMsgEventHandler">
            <summary>
            返回错误消息事件委托
            </summary>
            <param name="msg">错误消息</param>
        </member>
        <member name="T:SocketHelper.Event.EventHandlers.ReceivedEventHandler">
            <summary>
            数据接收事件委托
            </summary>
            <param name="sender">触发事件的对象</param>
            <param name="e">事件数据类对象</param>
        </member>
        <member name="T:SocketHelper.Event.ReceivedEventArgs">
            <summary>
            数据接收事件的事件数据类
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ReceivedEventArgs.ReceivedByteArray">
            <summary>
            接收到的byte数组
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ReceivedEventArgs.ReceivedString">
            <summary>
            接收数据的字符串格式
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ReceivedEventArgs.ReceivedHexString">
            <summary>
            接收数据的16进制字符串格式
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ReceivedEventArgs.Socket">
            <summary>
            连接的客户端的套接字
            </summary>
        </member>
        <member name="P:SocketHelper.Event.ReceivedEventArgs.ClientModel">
            <summary>
            连接的客户端
            </summary>
        </member>
        <member name="M:SocketHelper.Event.ReceivedEventArgs.#ctor">
            <summary>
            默认构造器
            </summary>
        </member>
        <member name="M:SocketHelper.Event.ReceivedEventArgs.#ctor(System.Byte[])">
            <summary>
            用byte数组初始化
            </summary>
            <param name="data">接收到的byte[]数组</param>
        </member>
        <member name="T:SocketHelper.Event.StateInfoEventArgs">
            <summary>
            连接状态改变时返回连接状态事件参数
            </summary>
        </member>
        <member name="P:SocketHelper.Event.StateInfoEventArgs.StateInfo">
            <summary>
            连接状态消息
            </summary>
        </member>
        <member name="P:SocketHelper.Event.StateInfoEventArgs.State">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="M:SocketHelper.Event.StateInfoEventArgs.#ctor(System.String,SocketHelper.SocketState)">
            <summary>
            用状态消息与连接状态初始化
            </summary>
            <param name="stateInfo">连接状态消息</param>
            <param name="state">连接状态</param>
        </member>
        <member name="T:SocketHelper.Helper.DataFrame">
            <summary>
            数据帧
            </summary>
        </member>
        <member name="M:SocketHelper.Helper.DataFrame.#ctor(System.Byte[])">
            <summary>
            用指定的byte数组初始化
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:SocketHelper.Helper.DataFrame.#ctor(System.String)">
            <summary>
            用指定的字符串初始化
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:SocketHelper.Helper.DataFrame.GetBytes">
            <summary>
            获取byte数组
            </summary>
            <returns></returns>
        </member>
        <member name="P:SocketHelper.Helper.DataFrame.Text">
            <summary>
            获取内容字符串
            </summary>
        </member>
        <member name="T:SocketHelper.Helper.DataFrameHeader">
            <summary>
            数据帧头部数据
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.FIN">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.RSV1">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.RSV2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.RSV3">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.OpCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.HasMask">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.Helper.DataFrameHeader.Length">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.Helper.DataFrameHeader.#ctor(System.Byte[])">
            <summary>
            用指定的byte数组初始化
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:SocketHelper.Helper.DataFrameHeader.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.SByte,System.Boolean,System.Int32)">
            <summary>
            用指定的参数初始化
            </summary>
            <param name="fin"></param>
            <param name="rsv1"></param>
            <param name="rsv2"></param>
            <param name="rsv3"></param>
            <param name="opcode"></param>
            <param name="hasmask"></param>
            <param name="length"></param>
        </member>
        <member name="M:SocketHelper.Helper.DataFrameHeader.GetBytes">
            <summary>
            返回帧头字节
            </summary>
            <returns></returns>
        </member>
        <member name="T:SocketHelper.ClientModel">
            <summary>
            客户端模组
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.RecevidMsg">
            <summary>
            接受的数据缓存
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.RecevidBuffer">
            <summary>
            缓存数据
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.ClientSocket">
            <summary>
            PC嵌套字
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.ClientStyle">
            <summary>
            Socket类型（网页版或者PC版）
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.Id">
            <summary>
            客户端编号
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.ClientNo">
            <summary>
            客户端编号
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.UserName">
            <summary>
            若是PC客户端类型，则表示用户登陆账号
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.Password">
            <summary>
            若是PC客户端类型，则表示用户密码
            </summary>
        </member>
        <member name="P:SocketHelper.ClientModel.IsOnline">
            <summary>
            是否在线
            </summary>
        </member>
        <member name="M:SocketHelper.ClientModel.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="T:SocketHelper.ClientStyle">
            <summary>
            客户端类型
            </summary>
        </member>
        <member name="F:SocketHelper.ClientStyle.None">
            <summary>
            未判明类型
            </summary>
        </member>
        <member name="F:SocketHelper.ClientStyle.WebSocket">
            <summary>
            WebSocket
            </summary>
        </member>
        <member name="F:SocketHelper.ClientStyle.PcSocket">
            <summary>
            PC端SOCKET
            </summary>
        </member>
        <member name="T:SocketHelper.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.LogType.SendDataSuccess">
            <summary>
            发送数据成功
            </summary>
        </member>
        <member name="F:SocketHelper.LogType.SendDataFailure">
            <summary>
            发送数据失败
            </summary>
        </member>
        <member name="F:SocketHelper.LogType.GetData">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.Tasks.DataTransTask">
            <summary>
            数据转发服务(TCPCLIENT->TCPSERVER)
            </summary>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransTask.#ctor(SocketHelper.Tasks.DataTransParamModel)">
            <summary>
            构造器
            </summary>
            <param name="paramModel"></param>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransTask.Init">
            <inheritdoc/>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransTask.LoopContent">
            <inheritdoc/>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransTask.GetNewInstance">
            <inheritdoc/>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransTask.SendOutHexString(System.String)">
            <summary>
            向外发送接收到的数据
            </summary>
            <param name="hex"></param>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransTask.Socket_OnReceive(System.Object,SocketHelper.Event.ReceivedEventArgs)">
            <summary>
            接收端接收到数据的事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:SocketHelper.Tasks.DataTransParamModel">
            <summary>
            数据转发服务参数实体类
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransParamModel.Enabled">
            <summary>
            转发服务是否可用
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransParamModel.SocketModelIn">
            <summary>
            向内接收数据的SOCKET参数
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransParamModel.SocketModelsOut">
            <summary>
            向外发送数据的SOCKET参数
            </summary>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransParamModel.#ctor(System.Boolean,SocketHelper.Tasks.DataTransSocketModel,System.Collections.Generic.List{SocketHelper.Tasks.DataTransSocketModel})">
            <summary>
            构造器
            </summary>
            <param name="enabled">转发服务是否可用</param>
            <param name="socketModelIn">向内接收数据的SOCKET参数</param>
            <param name="socketModelsOut">向外发送数据的SOCKET参数</param>
        </member>
        <member name="T:SocketHelper.Tasks.DataTransSocketModel">
            <summary>
            数据转发服务SOCKET参数实体类
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransSocketModel.Enabled">
            <summary>
            SOCKET是否可用
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransSocketModel.Type">
            <summary>
            SOCKET连接类型
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransSocketModel.IpAddress">
            <summary>
            IP地址（或网段），TCP/UDP客户端代表连接（推送）的远程IP，TCP/UDP服务端代表监听的本地IP
            </summary>
        </member>
        <member name="P:SocketHelper.Tasks.DataTransSocketModel.Port">
            <summary>
            端口号，TCP/UDP客户端代表连接（推送）的远程端口，TCP/UDP服务端代表监听的本地端口
            </summary>
        </member>
        <member name="M:SocketHelper.Tasks.DataTransSocketModel.#ctor(System.Boolean,SocketHelper.SocketConnType,System.String,System.Int32)">
            <summary>
            构造器
            </summary>
            <param name="enabled">SOCKET是否可用</param>
            <param name="type">SOCKET类型</param>
            <param name="ipAddress">IP地址（或网段）</param>
            <param name="port">端口号</param>
        </member>
        <member name="T:SocketHelper.SocketTcpClient">
            <summary>
            TCP客户端对象
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.ServerIp">
            <summary>
            服务端IP
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.ServerPort">
            <summary>
            服务端监听端口
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.AssignLocalAddress">
            <summary>
            是否指定本地地址
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.LocalIp">
            <summary>
            指定的本地IP
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.LocalPort">
            <summary>
            指定的本地端口
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.Name">
            <summary>
            Tcp连接名称，格式：本地端口->服务端IP:端口
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.LocalEndPoint">
            <summary>
            本地IP终结点，未初始化则为空
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.RemoteEndPoint">
            <summary>
            远程IP终结点，未连接则为空
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.BaseClient">
            <summary>
            TcpClient客户端
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.TcpThread">
            <summary>
            Tcp客户端连接线程
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.IsStartTcpThreading">
            <summary>
            是否启动Tcp连接线程
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.IsStart">
            <summary>
            TCP是否启动
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.IsConnected_Socket">
            <summary>
            Tcp Socket的真实连接状态
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.ReconnectWhenReceiveNone">
            <summary>
            在无返回数据时是否重新连接，超过5秒重连，触发最短间隔5秒
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.RaiseThreshold">
            <summary>
            计时阈值，计时达到此值触发事件，单位毫秒，默认5000
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.RaiseInterval">
            <summary>
            触发间隔，两次触发事件间允许的最短时间长度，单位毫秒，默认5000
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.IsReconnection">
            <summary>
            是否重连
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.ReConnectionTime">
            <summary>
            设置断开重连时间间隔单位（毫秒）（默认3000毫秒）
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.ReceiveBufferSize">
            <summary>
            接收缓冲区大小（字节数）
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpClient.ReConnectedCount">
            <summary>
            重新连接成功次数
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            构造器
            </summary>
            <param name="container">父容器</param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.GetTcpClientInstance">
            <summary>
            获取一个新的TcpClient实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.HexStringToByteArray(System.String)">
            <summary>
            十六进制字字符串转为节数组
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.ByteArrayToHexString(System.Byte[])">
            <summary>
            十六进制字节数组转为字符串
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SetName">
            <summary>
            设置Tcp连接名称，格式：本地端口->服务端IP:端口
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.StartConnection">
            <summary>
            启动连接Socket服务器
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.CreateTcpClient">
            <summary>
            创建线程连接
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.Reconnect_TheWholeDeal">
            <summary>
            重连方法
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.Reconnect">
            <summary>
            重连方法
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.StartTcpThread">
            <summary>
             线程接收Socket上传的数据
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.StopConnection">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SendData(System.Byte[])">
            <summary>
            发送byte数组
            </summary>
            <param name="byteMsg"></param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SendData(System.String,SocketHelper.StringType)">
            <summary>
            发送字符串（使用Default编码方式），同时指定待发送字符串的类型
            </summary>
            <param name="cmdstr">待发送字符串</param>
            <param name="type">字符串类型，普通字符串或16进制字符串</param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SendData(System.String,SocketHelper.StringType,System.Text.Encoding)">
            <summary>
            发送字符串，同时指定待发送字符串的类型和编码方式
            </summary>
            <param name="cmdstr">待发送字符串</param>
            <param name="type">字符串类型，普通字符串或16进制字符串</param>
            <param name="encoding">将字符串编码为字节流的编码类型，默认为Default（比如为null时）</param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SendData(System.String)">
            <summary>
            发送字符串
            </summary>
            <param name="cmdstr"></param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SendHexString(System.String)">
            <summary>
            发送16进制字符串
            </summary>
            <param name="hex">待发送16进制字符串</param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.SendFile(System.String)">
            <summary>
            发送文件
            </summary>
            <param name="filename">文件名</param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.IsOnline">
            <summary>
            检查一个Socket是否可连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.IsOnlineCheckThread">
            <summary>
            循环检查一个Socket是否可连接
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.IsOnlineCheckStart">
            <summary>
            启动循环检查一个Socket是否可连接的线程
            </summary>
        </member>
        <member name="E:SocketHelper.SocketTcpClient.OnReceive">
            <summary>
            接收数据事件
            </summary>
        </member>
        <member name="E:SocketHelper.SocketTcpClient.OnNoneReceived">
            <summary>
            持续一段时间未接收到任何数据的事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.OnTcpClientReceive(System.Object,SocketHelper.Event.ReceivedEventArgs)">
            <summary>
            数据接收事件方法
            </summary>
            <param name="sender">触发事件的对象</param>
            <param name="args">事件数据类对象</param>
        </member>
        <member name="E:SocketHelper.SocketTcpClient.OnErrorMsg">
            <summary>
            返回错误消息事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.OnTcpClientErrorMsgEnterHead(System.String)">
            <summary>
            返回错误消息事件方法
            </summary>
            <param name="msg">字符串信息</param>
        </member>
        <member name="E:SocketHelper.SocketTcpClient.OnStateInfo">
            <summary>
            连接状态改变时返回连接状态事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.OnTcpClientStateInfoEnterHead(System.String,SocketHelper.SocketState)">
            <summary>
            连接状态改变时返回连接状态事件方法
            </summary>
            <param name="msg">字符串信息</param>
            <param name="state">Socket状态</param>
        </member>
        <member name="F:SocketHelper.SocketTcpClient.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SocketHelper.SocketTcpClient.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:SocketHelper.StringType">
            <summary>
            字符串类型
            </summary>
        </member>
        <member name="F:SocketHelper.StringType.Normal">
            <summary>
            普通字符串
            </summary>
        </member>
        <member name="F:SocketHelper.StringType.Hex">
            <summary>
            16进制字符串
            </summary>
        </member>
        <member name="T:SocketHelper.TCP.AxTcpWebClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.TCP.AxTcpWebClient.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.TCP.AxTcpWebClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="F:SocketHelper.TCP.AxTcpWebClient.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SocketHelper.TCP.AxTcpWebClient.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SocketHelper.TCP.AxTcpWebClient.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:SocketHelper.AxUdpClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="F:SocketHelper.AxUdpClient._remoteIp">
            <summary>
            远程主机IP
            </summary>
        </member>
        <member name="F:SocketHelper.AxUdpClient._remotePort">
            <summary>
            远程主机端口
            </summary>
        </member>
        <member name="F:SocketHelper.AxUdpClient._localPort">
            <summary>
            本地监听端口
            </summary>
        </member>
        <member name="F:SocketHelper.AxUdpClient._sendFileManagerList">
            <summary>
            文件发送列表管理器
            </summary>
        </member>
        <member name="F:SocketHelper.AxUdpClient._receiveFileManagerList">
            <summary>
            文件接收列表管理器
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.IsAxAgreement">
            <summary>
            传输协议是否启用AxUDPClient内部封装协议
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.UdpLibrary">
            <summary>
            UDP客户端基类
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.SendFileManagerList">
            <summary>
            文件发送列表管理器
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.ReceiveFileManagerList">
            <summary>
            文件接收列表管理器
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.RemoteIp">
            <summary>
            远程监听IP
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.RemotePort">
            <summary>
            远程监听端口
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.LocalPort">
            <summary>
            本地监听IP
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.RemoteEp">
            <summary>
            远程主机网络端点
            </summary>
        </member>
        <member name="P:SocketHelper.AxUdpClient.FileTansfersControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.Start">
            <summary>
            启动监听
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.Stop">
            <summary>
            关闭监听
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.UdpLibraryReceiveData(System.Object,SocketHelper.ReceiveDataEventArgs)">
            <summary>
            继承Udp基类接收数据方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.CanSend(SocketHelper.SendFileManager)">
            <summary>
            返回是否允许发送，在发送列表中的文件不能重复发送（避免文件被占用导致错误）
            </summary>
            <param name="sendFileManager"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.AxUdpClient.SendFile(System.String)">
            <summary>
            发送文件
            </summary>
            <param name="fileName">文件路径（包含完整的文件名）</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.SendFile(SocketHelper.SendFileManager,System.Drawing.Image)">
            <summary>
            发送文件
            </summary>
            <param name="sendFileManager">需要发送的文件类</param>
            <param name="image">文件ICO图标</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.CancelSend(System.String)">
            <summary>
            取消发送
            </summary>
            <param name="md5">MD5校验文件</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.SendFileManageReadFileBuffer(System.Object,SocketHelper.ReadFileBufferEventArgs)">
            <summary>
            读取文件并发送文件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.Send(System.Int32,System.Object)">
            <summary>
            发送信息
            </summary>
            <param name="messageId">消息标识</param>
            <param name="data">序列化数据</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.SendText(System.String)">
            <summary>
            发送字符串
            </summary>
            <param name="strmsg"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.SendImage(System.Drawing.Image)">
            <summary>
            发送图像
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.Send(System.Int32,System.Object,System.Net.IPEndPoint)">
            <summary>
            发送信息
            </summary>
            <param name="messageId">消息标识</param>
            <param name="data">序列化数据</param>
            <param name="remoteIp">远程主机IP</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.Send(System.Byte[])">
            <summary>
            发送信息
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnResponeSendFile(SocketHelper.ResponeTraFransfersFile)">
            <summary>
            响应发送文件方法
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnResponeSendFilePack(SocketHelper.ResponeTraFransfersFile)">
            <summary>
            响应发送文件包方法
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnRequestCancelReceiveFile(System.String)">
            <summary>
            请求取消接收文件方法
            </summary>
            <param name="md5"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.AcceptReceive(SocketHelper.RequestSendFileEventArgs)">
            <summary>
            允许接收
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.CancelReceive(System.String,System.Net.IPEndPoint)">
            <summary>
            取消接收
            </summary>
            <param name="md5"></param>
            <param name="remoteIP"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.ReceiveFileManagerReceiveFileComplete(System.Object,SocketHelper.FileReceiveCompleteEventArgs)">
            <summary>
            完成接收文件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileSendCancel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileSendCancel(SocketHelper.FileSendEventArgs)">
            <summary>
            文件发送时被取消时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileSendAccept">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileSendAccept(SocketHelper.FileSendEventArgs)">
            <summary>
            文件被接收时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileSendBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileSendBuffer(SocketHelper.FileSendBufferEventArgs)">
            <summary>
            文件正在发送时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileSendRefuse">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileSendRefuse(SocketHelper.FileSendEventArgs)">
            <summary>
            发送文件被拒绝接收时触发事件
            </summary>Refuse to receive file
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileSendComplete">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileSendComplete(SocketHelper.FileSendEventArgs)">
            <summary>
            文件发送完成时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnRequestCancelSendFile(System.String,System.Net.IPEndPoint)">
            <summary>
            取消发送文件事件方法
            </summary>
            <param name="md5"></param>
            <param name="remoteIP"></param>
        </member>
        <member name="T:SocketHelper.AxUdpClient.ReceiveTextMsgEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.AxUdpClient.ReceiveTextMsg">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnReceiveTextMsg(SocketHelper.MsgTypeCell)">
            <summary>
            文件被接收时触发事件
            </summary>
            <param name="msgTypeCell"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileRecieveRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileRecieveRequest(SocketHelper.RequestSendFileEventArgs)">
            <summary>
            请求接收文件响应时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileReceiveBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileReceiveBuffer(SocketHelper.FileReceiveBufferEventArgs)">
            <summary>
            文件被读取时（正在读取）触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileReceiveComplete">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileReceiveComplete(SocketHelper.FileReceiveEventArgs)">
            <summary>
            文件接收完成时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SocketHelper.AxUdpClient.FileReceiveCancel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnFileReceiveCancel(SocketHelper.FileReceiveEventArgs)">
            <summary>
            文件接收时被取消发送触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnRecieveBuffer(SocketHelper.TraFransfersFile,System.Net.IPEndPoint)">
            <summary>
            接收文件事件方法
            </summary>
            <param name="traFransfersFile"></param>
            <param name="remoteEp"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnStartRecieve(SocketHelper.TraFransfersFileStart,System.Net.IPEndPoint)">
            <summary>
            开始接收文件事件方法（尚未开始接收文件）
            </summary>
            <param name="traFransfersFileStart"></param>
            <param name="remoteEp"></param>
        </member>
        <member name="T:SocketHelper.AxUdpClient.ReceiveByteEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.AxUdpClient.ReceiveByte">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.OnReceiveByte(SocketHelper.ReceiveDataEventArgs)">
            <summary>
            文件被接收时触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.AddReadyReceiveItem(SocketHelper.RequestSendFileEventArgs)">
            <summary>
            添加准备接收文件Item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.ItemSaveToButtonClick(System.Object,System.EventArgs)">
            <summary>
            文件另存为按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.ItemSaveButtonClick(System.Object,System.EventArgs)">
            <summary>
            保存文件按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.ItemRefuseButtonClick(System.Object,System.EventArgs)">
            <summary>
            拒绝接收文件按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.ItemCancelButtonClick(System.Object,System.EventArgs)">
            <summary>
            取消按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.AddSendItems(SocketHelper.SendFileManager,System.Drawing.Image)">
            <summary>
            添加发送文件控件Item
            </summary>
            <param name="sendFileManager"></param>
            <param name="image"></param>
        </member>
        <member name="F:SocketHelper.AxUdpClient.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SocketHelper.AxUdpClient.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SocketHelper.AxUdpClient.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:SocketHelper.FileTansfersContainer">
            <summary>
            发送接收文件管理器
            </summary>
        </member>
        <member name="P:SocketHelper.FileTansfersContainer.FileTransfersItemText">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTansfersContainer.IsAutomaticShowHide">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.AddItem(System.String,System.String,System.Drawing.Image,System.Int64,SocketHelper.FileTransfersItemStyle)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.AddItem(System.String,System.String,System.String,System.Drawing.Image,System.Int64,SocketHelper.FileTransfersItemStyle)">
            <summary>
            添加FileTransfersItem文件项
            </summary>
            <param name="md5">名称（MD5校验值）</param>
            <param name="typetext">文件类型（发送文件/接收文件）</param>
            <param name="fileName">文件路径</param>
            <param name="image">文件图标</param>
            <param name="fileSize">文件大小</param>
            <param name="style">文件状态（详情查看：FileTransfersItemStyle）</param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.RemoveItem(SocketHelper.FileTransfersItem)">
            <summary>
            移除对应FileTransfersItem
            </summary>
            <param name="item">FileTransfersItem</param>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.RemoveItem(System.String)">
            <summary>
            根据MD5键值移除对应控件
            </summary>
            <param name="md5"></param>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.RemoveItem(System.Predicate{SocketHelper.FileTransfersItem})">
            <summary>
            
            </summary>
            <param name="match"></param>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.Search(System.String)">
            <summary>
            根据MD5校验值查找FileTransfersItem
            </summary>
            <param name="md5"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.FileTansfersContainer.Search(System.Predicate{SocketHelper.FileTransfersItem})">
            <summary>
            
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="T:SocketHelper.FileTransfersItem">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.FileTransfersItem.SaveButtonClick">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.FileTransfersItem.SaveToButtonClick">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.FileTransfersItem.RefuseButtonClick">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.FileTransfersItem.CancelButtonClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.FileSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.TotalTransfersSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.Style">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.RoundStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.Radius">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.BaseColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.BorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.ProgressBarTrackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.ProgressBarBarColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.ProgressBarBorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.ProgressBarTextColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.FileTransfersText">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.Interval">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileTransfersItem.DefaultSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnSaveButtonClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnSaveToButtonClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnRefuseButtonClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnCancelButtonClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.FileTransfersItem.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:SocketHelper.FileTransfersItemStyle">
            <summary>
            文件状态
            </summary>
        </member>
        <member name="F:SocketHelper.FileTransfersItemStyle.Send">
            <summary>
            发送文件
            </summary>
        </member>
        <member name="F:SocketHelper.FileTransfersItemStyle.ReadyReceive">
            <summary>
            准备接收文件
            </summary>
        </member>
        <member name="F:SocketHelper.FileTransfersItemStyle.Receive">
            <summary>
            接收文件
            </summary>
        </member>
        <member name="T:SocketHelper.GraphicsPathHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.GraphicsPathHelper.CreatePath(System.Drawing.Rectangle,System.Int32,SocketHelper.RoundStyle,System.Boolean)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <param name="radius"></param>
            <param name="style"></param>
            <param name="correction"></param>
            <returns></returns>
        </member>
        <member name="T:SocketHelper.IFileTransfersItemText">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.IFileTransfersItemText.Save">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.IFileTransfersItemText.SaveTo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.IFileTransfersItemText.RefuseReceive">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.IFileTransfersItemText.CancelTransfers">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.RoundStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.RoundStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.RoundStyle.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.RoundStyle.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.RoundStyle.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.RoundStyle.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.RoundStyle.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.TraFransfersFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.TraFransfersFile.#ctor(System.String,System.Int32,System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFile.MD5">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFile.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFile.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.TraFransfersFileStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.TraFransfersFileStart.#ctor(System.String,System.String,System.Drawing.Image,System.Int64,System.Int64,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFileStart.MD5">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFileStart.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFileStart.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFileStart.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFileStart.PartCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.TraFransfersFileStart.PartSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.ReadFileBufferEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.ReadFileBufferEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReadFileBufferEventArgs.#ctor(System.Int32,System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReadFileBufferEventArgs.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReadFileBufferEventArgs.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.ReceiveDataEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.ReceiveDataEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveDataEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveDataEventArgs.#ctor(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveDataEventArgs.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveDataEventArgs.RemoteIP">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileReceiveBufferEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileReceiveBufferEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileReceiveBufferEventArgs.#ctor(SocketHelper.ReceiveFileManager,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileReceiveBufferEventArgs.ReceiveFileManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileReceiveBufferEventArgs.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileReceiveCompleteEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileReceiveCompleteEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileReceiveCompleteEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileReceiveCompleteEventArgs.#ctor(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileReceiveCompleteEventArgs.Success">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileReceiveEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileReceiveEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileReceiveEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileReceiveEventArgs.#ctor(SocketHelper.ReceiveFileManager)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileReceiveEventArgs.ReceiveFileManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileReceiveEventArgs.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileSendBufferEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileSendBufferEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileSendBufferEventArgs.#ctor(SocketHelper.SendFileManager,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileSendBufferEventArgs.SendFileManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileSendBufferEventArgs.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileSendEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.FileSendEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.FileSendEventArgs.#ctor(SocketHelper.SendFileManager)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.FileSendEventArgs.SendFileManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.RequestSendFileEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.RequestSendFileEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.RequestSendFileEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.RequestSendFileEventArgs.#ctor(SocketHelper.TraFransfersFileStart,System.Net.IPEndPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.RequestSendFileEventArgs.#ctor(SocketHelper.TraFransfersFileStart,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.RequestSendFileEventArgs.RemoteIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.RequestSendFileEventArgs.TraFransfersFileStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.RequestSendFileEventArgs.Path">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.ReceiveFileManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.#ctor(System.String,System.String,System.String,System.Int64,System.Int32,System.Net.IPEndPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.ReceiveFileManager.ReceiveFileComplete">
            <summary>
            
            </summary>
        </member>
        <member name="E:SocketHelper.ReceiveFileManager.ReceiveFileTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.MD5">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.PartCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.Success">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.RemoteIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ReceiveFileManager.Completed">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.GetNextReceiveIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.ReceiveBuffer(System.Int32,System.Byte[])">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.OnReceiveFileComplete(SocketHelper.FileReceiveCompleteEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.OnReceiveFileTimeout(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ReceiveFileManager.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="managed"></param>
        </member>
        <member name="T:SocketHelper.SendFileManager">
            <summary>
            文件管理类
            </summary>
        </member>
        <member name="M:SocketHelper.SendFileManager.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.SendFileManager.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.PartCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.PartSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.MD5">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.SendFileManager.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.SendFileManager.Create(System.String)">
            <summary>
            创建初始化文件管理类
            </summary>
            <param name="fileName">文件路径</param>
        </member>
        <member name="M:SocketHelper.SendFileManager.Read(System.Int32)">
            <summary>
            读取文件
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:SocketHelper.SendFileManager.EndRead(System.IAsyncResult)">
            <summary>
            结束读取文件
            </summary>
            <param name="result"></param>
        </member>
        <member name="E:SocketHelper.SendFileManager.ReadFileBuffer">
            <summary>
            读取文件事件
            </summary>
        </member>
        <member name="M:SocketHelper.SendFileManager.OnReadFileBuffer(SocketHelper.ReadFileBufferEventArgs)">
            <summary>
            读取文件方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SocketHelper.SendFileManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.SendFileManager.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="managed"></param>
        </member>
        <member name="T:SocketHelper.SerHelper">
            <summary>
            负责将对象序列化成byte[]数组
            </summary>
        </member>
        <member name="M:SocketHelper.SerHelper.Serialize(System.Object)">
            <summary>
            将实体序列化成byte[]数组
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SerHelper.Deserialize``1(System.Byte[])">
            <summary>
            根据byte[]字节数组反序列化成 对象实体
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SerHelper.Deserialize(System.Byte[],System.Int32)">
            <summary>
            根据byte[]字节数组反序列化成 对象实体
            </summary>
            <param name="datas"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:SocketHelper.IDataCell">
            <summary>
            消息数据单元接口
            </summary>
        </member>
        <member name="M:SocketHelper.IDataCell.ToBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.IDataCell.FromBuffer(System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.MsgCell">
            <summary>
            消息单元类（可序列化）
            </summary>
        </member>
        <member name="P:SocketHelper.MsgCell.MessageId">
            <summary>
            消息标识
            </summary>
        </member>
        <member name="P:SocketHelper.MsgCell.Data">
            <summary>
            消息序列化数据
            </summary>
        </member>
        <member name="M:SocketHelper.MsgCell.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.MsgCell.#ctor(System.Int32,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="messageId">消息标识</param>
            <param name="data">序列化数据</param>
        </member>
        <member name="M:SocketHelper.MsgCell.ToBuffer">
            <summary>
            将数据序列化成Byte[]数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.MsgCell.FromBuffer(System.Byte[])">
            <summary>
            将Byte[]数组反序列化成数据结构
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:SocketHelper.MsgTypeCell">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.MsgTypeCell.Msgtype">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:SocketHelper.MsgTypeCell.ImageSuffix">
            <summary>
            图片后缀格式
            </summary>
        </member>
        <member name="P:SocketHelper.MsgTypeCell.BufferBytes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.MsgTypeCell.#ctor(SocketHelper.MsgType,System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.ResponeTraFransfersFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ResponeTraFransfersFile.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.ResponeTraFransfersFile.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ResponeTraFransfersFile.MD5">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ResponeTraFransfersFile.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:SocketHelper.ResponeTraFransfersFile.Index">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.UdpLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SocketHelper.UdpLibrary._port">
            <summary>
            UDP监听端口
            </summary>
        </member>
        <member name="P:SocketHelper.UdpLibrary.Port">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.Send(SocketHelper.IDataCell,System.Net.IPEndPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.Send(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.SendInternal(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.IsStarted">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.ReceiveInternal">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="managed"></param>
        </member>
        <member name="E:SocketHelper.UdpLibrary.ReceiveData">
            <summary>
            
            </summary>
        </member>
        <member name="M:SocketHelper.UdpLibrary.OnReceiveData(SocketHelper.ReceiveDataEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SocketHelper.SocketConnType">
            <summary>
            SOCKET连接类型
            </summary>
        </member>
        <member name="F:SocketHelper.SocketConnType.TcpClient">
            <summary>
            TCP客户端
            </summary>
        </member>
        <member name="F:SocketHelper.SocketConnType.TcpServer">
            <summary>
            TCP服务端
            </summary>
        </member>
        <member name="F:SocketHelper.SocketConnType.Udp">
            <summary>
            UDP
            </summary>
        </member>
        <member name="T:SocketHelper.SocketState">
            <summary>
            Socket状态枚举
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.Connecting">
            <summary>
            正在连接服务端
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.Connected">
            <summary>
            已连接服务端
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.Reconnection">
            <summary>
            重新连接服务端
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.Disconnect">
            <summary>
            断开服务端连接
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.StartListening">
            <summary>
            正在监听
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.StopListening">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.ClientOnline">
            <summary>
            客户端上线
            </summary>
        </member>
        <member name="F:SocketHelper.SocketState.ClientOffline">
            <summary>
            客户端下线
            </summary>
        </member>
        <member name="T:SocketHelper.Command">
            <summary>
            发送接收命令枚举
            </summary>
        </member>
        <member name="F:SocketHelper.Command.RequestSendFile">
            <summary>
            发送请求接收文件
            </summary>
        </member>
        <member name="F:SocketHelper.Command.ResponeSendFile">
            <summary>
            响应发送请求接收文件
            </summary>
        </member>
        <member name="F:SocketHelper.Command.RequestSendFilePack">
            <summary>
            请求发送文件包
            </summary>
        </member>
        <member name="F:SocketHelper.Command.ResponeSendFilePack">
            <summary>
            响应发送文件包
            </summary>
        </member>
        <member name="F:SocketHelper.Command.RequestCancelSendFile">
            <summary>
            请求取消发送文件包
            </summary>
        </member>
        <member name="F:SocketHelper.Command.ResponeCancelSendFile">
            <summary>
            响应取消发送文件包
            </summary>
        </member>
        <member name="F:SocketHelper.Command.RequestCancelReceiveFile">
            <summary>
            请求取消接收发送文件
            </summary>
        </member>
        <member name="F:SocketHelper.Command.ResponeCancelReceiveFile">
            <summary>
            响应取消接收发送文件
            </summary>
        </member>
        <member name="F:SocketHelper.Command.RequestSendTextMSg">
            <summary>
            请求发送文本消息
            </summary>
        </member>
        <member name="T:SocketHelper.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:SocketHelper.MsgType.TxtMsg">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="F:SocketHelper.MsgType.Shake">
            <summary>
            抖动窗体
            </summary>
        </member>
        <member name="F:SocketHelper.MsgType.Face">
            <summary>
            表情
            </summary>
        </member>
        <member name="F:SocketHelper.MsgType.Pic">
            <summary>
            图片
            </summary>
        </member>
        <member name="T:SocketHelper.SocketTcpServer">
            <summary>
            TCP监听服务
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.ServerSocket">
            <summary>
            监听Socket
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.StartSockst">
            <summary>
            监听线程
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.HeartBeatCheck">
            <summary>
            心跳检测线程
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.ServerIp">
            <summary>
            本机监听IP,默认是本地ip
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.ServerPort">
            <summary>
            监听端口
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.Name">
            <summary>
            Tcp连接名称，格式：本地端口->服务端IP:端口
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.LocalEndPoint">
            <summary>
            本地IP终结点，未初始化则为空
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.RemoteEndPoint">
            <summary>
            远程IP终结点，未连接则为空
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.HeartBeatPacket">
            <summary>
            心跳包检测字符串
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.IsHeartCheck">
            <summary>
            是否开启心跳检测
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.CheckTime">
            <summary>
            心跳检测时间,单位：毫秒
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.IsStartListening">
            <summary>
            是否已启动监听
            </summary>
        </member>
        <member name="P:SocketHelper.SocketTcpServer.ClientSocketList">
            <summary>
            客户端列表
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.#ctor">
            <summary>
            默认构造器
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            构造器
            </summary>
            <param name="container">控件容器</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.HeartBeatCheckThread">
            <summary>
            循环心跳检测
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.ForeachCheck">
            <summary>
            对每个连接的TCP客户端进行心跳检测
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.Start">
            <summary>
            TCP服务启动
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.Stop">
            <summary>
            关闭监听
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SetName">
            <summary>
            设置Tcp连接名称，格式：本地端口->服务端IP:端口
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.ShutdownClient(SocketHelper.ClientModel)">
            <summary>
            关闭某个指定客户端（会从ClientSocketList中移除客户端对象，注意枚举的使用）
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.ShutdownAllClients">
            <summary>
            关闭所有连接的TCP客户端
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.StartSocketListening">
            <summary>
            开始监听
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.ClientSocketCallBack(System.Object)">
            <summary>
            线程池回调
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.WebSocketHandShake(SocketHelper.ClientModel,SocketHelper.Event.ReceivedEventArgs)">
            <summary>
            网络WebSocket协议握手
            </summary>
            <param name="cModel"></param>
            <param name="args"></param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.AnalyseWebSocketData(System.Byte[],System.Int32)">
            <summary>
            解析WebSocket数据
            </summary>
            <param name="recBytes"></param>
            <param name="recByteLength"></param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.PackHandShakeData(System.String)">
            <summary>
            打包握手信息
            </summary>
            <param name="secKeyAccept">Sec-WebSocket-Accept</param>
            <returns>数据包</returns>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.GetSecKey(System.Byte[],System.Int32)">
            <summary>
            通过握手协议字节组获取WebSocket密钥
            </summary>
            <param name="handShakeBytes">握手协议字节组</param>
            <param name="bytesLength">握手协议字节组长度</param>
            <returns></returns>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToPcClient(System.String,System.Int32,System.String)">
            <summary>
            向指定IP端口发送字符串，假如不是已连接的客户端则忽视
            </summary>
            <param name="ip">远程IP</param>
            <param name="port">远程端口</param>
            <param name="data">待发送字符串，ANSI编码</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToPcClient(System.String,System.Int32,System.Byte[])">
            <summary>
            向指定IP端口发送字符串，假如不是已连接的客户端则忽视
            </summary>
            <param name="ip">远程IP</param>
            <param name="port">远程端口</param>
            <param name="data">待发送byte数组</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToPcClient(SocketHelper.ClientModel,System.String)">
            <summary>
            向指定的客户端发送数据
            </summary>
            <param name="cModel">客户端</param>
            <param name="data">字符串数据，ANSI编码</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToPcClient(SocketHelper.ClientModel,System.Byte[])">
            <summary>
            向指定的客户端发送数据
            </summary>
            <param name="cModel">客户端</param>
            <param name="data">字节数组数据</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToWebClient(SocketHelper.ClientModel,System.String)">
            <summary>
            向指定的websocket客户端发送信息
            </summary>
            <param name="client">客户端</param>
            <param name="sendData">发送的字符串数据包</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToWebClient(SocketHelper.ClientModel,System.Byte[])">
            <summary>
            向指定的websocket客户端发送信息
            </summary>
            <param name="client">客户端</param>
            <param name="sendData">发送的byte数组数据包</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToClient(SocketHelper.ClientModel,System.Byte[])">
            <summary>
            向指定的客户端发送命令（byte数组）
            </summary>
            <param name="clientModel">客户端对象</param>
            <param name="data">待发送的数据（byte数组）</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToClient(SocketHelper.ClientModel,System.String)">
            <summary>
            向指定的客户端发送命令（字符串）
            </summary>
            <param name="clientModel">客户端对象</param>
            <param name="data">待发送的数据（字符串）</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendToClient(SocketHelper.ClientModel,System.String,SocketHelper.StringType)">
            <summary>
            向指定的客户端发送命令（字符串）
            </summary>
            <param name="clientModel">客户端对象</param>
            <param name="data">待发送的数据（字符串）</param>
            <param name="type">字符串类型，普通字符串或16进制字符串（客户端类型为WebSocket时将无视此参数）</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendData(System.Byte[])">
            <summary>
            向所有客户端发送命令（byte数组）
            </summary>
            <param name="data">待发送的数据（byte数组）</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendData(System.String)">
            <summary>
            向所有客户端发送命令（字符串）
            </summary>
            <param name="data">待发送的数据（字符串）</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.SendData(System.String,SocketHelper.StringType)">
            <summary>
            向所有客户端发送命令（字符串）
            </summary>
            <param name="data">待发送的数据（字符串）</param>
            <param name="type">字符串类型，普通字符串或16进制字符串</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.ResolveSocket(System.String,System.Int32)">
            <summary>
            根据IP,端口查找Socket客户端
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.Received">
            <summary>
            TCP服务接收事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnTcpServerReceive(System.Object,SocketHelper.Event.ReceivedEventArgs)">
            <summary>
            TcpServer数据接收事件
            </summary>
            <param name="sender">触发事件的对象</param>
            <param name="e">事件数据类对象</param>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.OnErrorMsg">
            <summary>
            返回错误消息事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnTcpServerErrorMsgEnterHead(System.String)">
            <summary>
            返回错误消息事件方法
            </summary>
            <param name="msg">错误消息</param>
        </member>
        <member name="T:SocketHelper.SocketTcpServer.ReturnClientCountEventHandler">
            <summary>
            更新客户端在线数量事件委托
            </summary>
            <param name="count">客户端在线数量</param>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.OnReturnClientCount">
            <summary>
            用户上线下线时更新客户端在线数量事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnTcpServerReturnClientCountEnterHead(System.Int32)">
            <summary>
            用户上线下线时更新客户端在线数量事件方法
            </summary>
            <param name="count">客户端在线数量</param>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.OnStateInfo">
            <summary>
            连接状态改变时返回连接状态事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnTcpServerStateInfoEnterHead(System.String,SocketHelper.SocketState)">
            <summary>
            连接状态改变时返回连接状态事件方法
            </summary>
            <param name="msg">字符串信息</param>
            <param name="state">Socket状态</param>
        </member>
        <member name="T:SocketHelper.SocketTcpServer.ClientOnlineEventHandler">
            <summary>
            新客户端上线时返回客户端事件委托
            </summary>
            <param name="eventArgs"></param>
            <param name="sender"></param>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.OnClientOnline">
            <summary>
            新客户端上线时返回客户端事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnTcpServerOnlineClientEnterHead(SocketHelper.ClientModel)">
            <summary>
            新客户端上线时返回客户端事件方法
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:SocketHelper.SocketTcpServer.ClientOfflineEventHandler">
            <summary>
            客户端下线时返回客户端事件委托
            </summary>
            <param name="eventArgs"></param>
            <param name="sender"></param>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.OnClientOffline">
            <summary>
            客户端下线时返回客户端事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnTcpServerOfflineClientEnterHead(SocketHelper.ClientModel)">
            <summary>
            客户端下线时返回客户端事件方法
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:SocketHelper.SocketTcpServer.LogEventHandler">
            <summary>
            服务端有涉及到客户端读写操作时的返回日志事件委托
            </summary>
            <param name="temp">与服务端连接的客户端</param>
            <param name="logType">日志类型，获取数据或发送数据</param>
            <param name="logMsg">数据内容</param>
        </member>
        <member name="E:SocketHelper.SocketTcpServer.OnGetLog">
            <summary>
            服务端有涉及到客户端读写操作时的返回日志事件
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.OnGetLogEnterHead(SocketHelper.ClientModel,SocketHelper.LogType,System.String)">
            <summary>
            触发服务端有涉及到客户端读写操作时的返回日志事件委托
            </summary>
            <param name="temp">与服务端连接的客户端</param>
            <param name="logType">日志类型，获取数据或发送数据</param>
            <param name="logMsg">数据内容</param>
        </member>
        <member name="F:SocketHelper.SocketTcpServer.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SocketHelper.SocketTcpServer.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
    </members>
</doc>
